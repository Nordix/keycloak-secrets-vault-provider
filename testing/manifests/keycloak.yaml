apiVersion: v1
kind: Service
metadata:
  name: keycloak-0
spec:
  selector:
    statefulset.kubernetes.io/pod-name: keycloak-0
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 8080
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-1
spec:
  selector:
    statefulset.kubernetes.io/pod-name: keycloak-1
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 8081
  type: NodePort
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-headless
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: keycloak
  ports:
    - name: http
      port: 8443
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
spec:
  selector:
    matchLabels:
      app: keycloak
  replicas: 2
  serviceName: keycloak-headless
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.4.1
          command:
            - "/bin/bash"
            - "-c"
            - |
              cp /host/target/secrets-provider-*jar /opt/keycloak/providers/secrets-provider.jar
              mkdir -p /opt/keycloak/data/import
              cp /host/testing/configs/keycloak-realms/* /opt/keycloak/data/import/
              cp /host/testing/configs/custom-cache-ispn.xml /opt/keycloak/conf/custom-cache-ispn.xml
              # For capturing traffic with Wireshark, TLS to OpenBao can be disabled by
              # changing all "nnn--address" parameters from https://openbao:18200 to http://openbao:8200
              /opt/keycloak/bin/kc.sh start \
                --import-realm \
                --spi-vault--provider=secrets-provider \
                --spi-vault--secrets-provider--address=https://openbao:18200 \
                --spi-vault--secrets-provider--ca-certificate-file=/host/testing/certs/ca.pem \
                --spi-vault--secrets-provider--kv-mount=secret \
                --spi-vault--secrets-provider--kv-path-prefix="keycloak/%realm%" \
                --spi-vault--secrets-provider--kv-version=1 \
                --spi-vault--secrets-provider--role=keycloak-reader \
                --spi-vault--secrets-provider--cache-name=vaultExtensionSecrets \
                --spi-admin-realm-restapi-extension--secrets-manager--address=https://openbao:18200 \
                --spi-admin-realm-restapi-extension--secrets-manager--ca-certificate-file=/host/testing/certs/ca.pem \
                --spi-admin-realm-restapi-extension--secrets-manager--kv-mount=secret \
                --spi-admin-realm-restapi-extension--secrets-manager--kv-path-prefix="keycloak/%realm%" \
                --spi-admin-realm-restapi-extension--secrets-manager--kv-version=1 \
                --spi-admin-realm-restapi-extension--secrets-manager--role=keycloak-admin \
                --spi-admin-realm-restapi-extension--secrets-manager--cache-name=vaultExtensionSecrets \
                --cache-config-file=custom-cache-ispn.xml \
                --log-level=INFO,io.github.nordix:debug
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: admin
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: admin
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HEALTH_ENABLED
              value: "true"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL
              value: "jdbc:postgresql://postgres/keycloak"
            - name: KC_DB_USERNAME
              value: "keycloak"
            - name: KC_DB_PASSWORD
              value: "keycloak"

            # Following could be used to disable HTTP/2 for easier debugging with Wireshark.
            # It does not currently disable h2c due to https://github.com/quarkusio/quarkus/pull/49634
            #- name: QUARKUS_HTTP_HTTP2
            #  value: "false"

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: management
              containerPort: 9000
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /health/live
              port: 9000
              scheme: HTTP

          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9000
              scheme: HTTP

          startupProbe:
            httpGet:
              path: /health/started
              port: 9000
              scheme: HTTP

          volumeMounts:
            - name: hostvolume
              mountPath: /host
              readOnly: true

      volumes:
        - name: hostvolume
          hostPath:
            path: /host

      serviceAccountName: keycloak
