---
openapi: 3.1.0
tags:
- name: Secrets Manager
components:
  schemas:
    SecretRequest:
      type: object
      properties:
        secret:
          type: string
          description: "The secret value to be stored. If omitted or empty, a random\
            \ secret is generated."
          examples:
          - my-secret-value
    SecretResponse:
      type: object
      required:
      - id
      - secret
      properties:
        id:
          type: string
          description: The ID of the secret.
          examples:
          - secret-id-1
        vault_id:
          type: string
          description: The Keycloak Vault ID format for this secret.
          examples:
          - "${vault.secret-id-1}"
        secret:
          type: string
          description: The secret value.
          examples:
          - my-secret-value
    SecretsListResponse:
      type: object
      required:
      - secret_ids
      properties:
        secret_ids:
          type: array
          items:
            type: string
          description: List of secret IDs for the realm
          examples:
          - - secret-id-1
            - secret-id-2
paths:
  /secrets-manager:
    get:
      summary: List all secrets
      description: Returns a list of all secret IDs for the realm.
      tags:
      - Secrets Manager
      responses:
        "200":
          description: List of secrets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretsListResponse"
        "500":
          description: Internal server error
  /secrets-manager/{id}:
    put:
      summary: Update a secret
      description: "Updates an existing secret. If a secret value is not provided\
        \ in the request body, a random secret will be generated."
      tags:
      - Secrets Manager
      parameters:
      - description: "ID of the secret to update. Must match the regex ^[a-zA-Z0-9_-]+$\
          \ and must exist."
        required: true
        name: id
        in: path
        schema:
          type: string
      requestBody:
        description: "Optional secret data. If not provided, a random secret will\
          \ be generated."
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecretRequest"
      responses:
        "200":
          description: Secret updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretResponse"
        "400":
          description: "Bad request, e.g., invalid ID format"
        "404":
          description: Secret not found
        "500":
          description: Internal server error
    get:
      summary: Get a secret
      description: Retrieves a secret by its ID.
      tags:
      - Secrets Manager
      parameters:
      - description: "ID of the secret to retrieve. Must match the regex ^[a-zA-Z0-9_-]+$\
          \ and must exist."
        required: true
        name: id
        in: path
        schema:
          type: string
      responses:
        "200":
          description: Secret found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretResponse"
        "404":
          description: Secret not found
        "400":
          description: "Bad request, e.g., invalid ID format"
        "500":
          description: Internal server error
    delete:
      summary: Delete a secret
      description: Deletes a secret by its ID.
      tags:
      - Secrets Manager
      parameters:
      - description: "ID of the secret to delete. Must match the regex ^[a-zA-Z0-9_-]+$\
          \ and must exist."
        required: true
        name: id
        in: path
        schema:
          type: string
      responses:
        "204":
          description: Secret deleted successfully
        "404":
          description: Secret not found
        "400":
          description: "Bad request, e.g., invalid ID format"
        "500":
          description: Internal server error
    post:
      summary: Create a new secret
      description: "Creates a new secret with the given ID. If a secret value is not\
        \ provided in the request body, a random secret will be generated."
      tags:
      - Secrets Manager
      parameters:
      - description: "ID of the secret to create. Must match the regex ^[a-zA-Z0-9_-]+$\
          \ and must not already exist."
        required: true
        name: id
        in: path
        schema:
          type: string
      requestBody:
        description: "Optional secret data. If not provided, a random secret will\
          \ be generated."
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecretRequest"
      responses:
        "201":
          description: Secret created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecretResponse"
        "400":
          description: "Bad request, e.g., invalid ID format"
        "409":
          description: Secret with the given ID already exists
        "500":
          description: Internal server error
info:
  title: Keycloak Secrets Manager
  version: 1.0-SNAPSHOT
  description: Manage per-realm Keycloak vault secrets stored in an external vault
    backend. API base URL is `https://<KEYCLOAK_URL>/auth/realms/<REALM_NAME>/secrets-manager/`.
    Executing the requests require Keycloak bearer token with realm administrator
    privileges.
  contact:
    name: Keycloak Vault Provider for OpenBao and HashiCorp Vault
    url: https://github.com/Nordix/keycloak-secrets-vault-provider
